Code "GE_LightScatEnable"
//
	#include "Reflection" noemit

	#lib "Reflection"
	#using "NeedleFxSceneData"
	#lib "HMM"
	#lib "INI"

	#import "Services"

	static bool IsConfigInitialised = false;
	static int LightScatEnable = 0;
//
    if (!IsConfigInitialised)
    {
		var mod = HMM.GetModByID("GEAdvanced.mod");

		if (mod == null)
			return;

		string modConfigIniPath = System.IO.Path.Combine(mod.Path, "config.ini");
		var ini = INI.Read(modConfigIniPath);

		LightScatEnable = INI.Parse<int>(ini["LightScatSettings"]["LightScatEnable"], LightScatEnable);
        IsConfigInitialised = true;
    }

if (LightScatEnable == 1)
{
 string[] levelIds = {"w1f01", "w1h01", "w5r01", "w5t01", "w5t02", "w1r03", "w1r04", "w2r01", "w3r01", "w4r01", "w6d01", "w6d02", "w6d03", "w6d04", "w6d05", "w6d06", "w6d07", "w6d08", "w6d09", "w6d10", "w7d01", "w7d02", "w7d03", "w7d04", "w7d05", "w7d06", "w7d07", "w7d08", "w8d01", "w8d02", "w8d03", "w8d04", "w8d05", "w8d06", "w9d03", "w9d04", "w9d02", "w9d07", "w9d06", "w9d05"};

    foreach (string levelId in levelIds) {
        var NeedleFxSceneDataInfo = Reflection.GetDataInfo<NeedleFxSceneData.Root>(levelId);

        if (NeedleFxSceneDataInfo.pData == null)
            continue;
for (int i = 0; i < 16; i++) {
    RFL_SET_PARAM(NeedleFxSceneDataInfo, items[i].lightscattering.enable, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, items[i].atmosphere.crepuscularRayParam.enable, true);
    RFL_SET_PARAM(NeedleFxSceneDataInfo, items[i].atmosphere.commonSkyParam.enableScattering, true);
    RFL_SET_PARAM(NeedleFxSceneDataInfo, items[i].atmosphere.brunetonSkyParam.enableScattering, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, items[i].atmosphere.sebastienSkyParam.enableScattering, true);
}
  for (int t = 0; t < 24; t++) {
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[t].lightscattering.enable, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[t].atmosphere.crepuscularRayParam.enable, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[t].atmosphere.commonSkyParam.enableScattering, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[t].atmosphere.brunetonSkyParam.enableScattering, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[t].atmosphere.sebastienSkyParam.enableScattering, true);
    
}
  for (int w = 0; w < 7; w++) {
	RFL_SET_PARAM(NeedleFxSceneDataInfo, weatherItems[w].lightscattering.enable, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, weatherItems[w].atmosphere.crepuscularRayParam.enable, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, weatherItems[w].atmosphere.commonSkyParam.enableScattering, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, weatherItems[w].atmosphere.brunetonSkyParam.enableScattering, true);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, weatherItems[w].atmosphere.sebastienSkyParam.enableScattering, true);	
}
        }
    }

Code "LightScatEnablew1r03"
//
	#include "Reflection" noemit

	#lib "Reflection"
	#using "NeedleFxSceneData"
	#lib "HMM"
	#lib "INI"

	#import "Services"

	static bool IsConfigInitialised = false;
	static int LightScatEnable = 0;
	static int NightLight = 0;
//
    if (!IsConfigInitialised)
    {
		var mod = HMM.GetModByID("GEAdvanced.mod");

		if (mod == null)
			return;

		string modConfigIniPath = System.IO.Path.Combine(mod.Path, "config.ini");
		var ini = INI.Read(modConfigIniPath);

		LightScatEnable = INI.Parse<int>(ini["LightScatSettings"]["LightScatEnable"], LightScatEnable);
        IsConfigInitialised = true;
    }

if (LightScatEnable == 1)
{
    string[] levelIds = {"w1r03"};

    foreach (string levelId in levelIds) {
        var NeedleFxSceneDataInfo = Reflection.GetDataInfo<NeedleFxSceneData.Root>(levelId);

        if (NeedleFxSceneDataInfo.pData == null)
            continue;

	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[0].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[1].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[2].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[3].lightscattering.inScatteringScale, 0.5f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[14].lightscattering.inScatteringScale, 0.5f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[15].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[16].lightscattering.inScatteringScale, 0.25f);
    }
}

Code "LightScatEnablew1r04"
//
	#include "Reflection" noemit

	#lib "Reflection"
	#using "NeedleFxSceneData"
	#lib "HMM"
	#lib "INI"

	#import "Services"

	static bool IsConfigInitialised = false;
	static int LightScatEnable = 0;
	static int NightLight = 0;
//
    if (!IsConfigInitialised)
    {
		var mod = HMM.GetModByID("GEAdvanced.mod");

		if (mod == null)
			return;

		string modConfigIniPath = System.IO.Path.Combine(mod.Path, "config.ini");
		var ini = INI.Read(modConfigIniPath);

		LightScatEnable = INI.Parse<int>(ini["LightScatSettings"]["LightScatEnable"], LightScatEnable);
        IsConfigInitialised = true;
    }

if (LightScatEnable == 1)
{
    string[] levelIds = {"w1r04"};

    foreach (string levelId in levelIds) {
        var NeedleFxSceneDataInfo = Reflection.GetDataInfo<NeedleFxSceneData.Root>(levelId);

        if (NeedleFxSceneDataInfo.pData == null)
            continue;

	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[0].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[1].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[2].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[3].lightscattering.inScatteringScale, 0.5f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[14].lightscattering.inScatteringScale, 0.5f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[15].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[16].lightscattering.inScatteringScale, 0.25f);
    }
}

Code "LightScatEnablew2r01"
//
	#include "Reflection" noemit

	#lib "Reflection"
	#using "NeedleFxSceneData"
	#lib "HMM"
	#lib "INI"

	#import "Services"

	static bool IsConfigInitialised = false;
	static int LightScatEnable = 0;
	static int NightLight = 0;
//
    if (!IsConfigInitialised)
    {
		var mod = HMM.GetModByID("GEAdvanced.mod");

		if (mod == null)
			return;

		string modConfigIniPath = System.IO.Path.Combine(mod.Path, "config.ini");
		var ini = INI.Read(modConfigIniPath);

		LightScatEnable = INI.Parse<int>(ini["LightScatSettings"]["LightScatEnable"], LightScatEnable);
        IsConfigInitialised = true;
    }

if (LightScatEnable == 1)
{
    string[] levelIds = {"w2r01"};

    foreach (string levelId in levelIds) {
        var NeedleFxSceneDataInfo = Reflection.GetDataInfo<NeedleFxSceneData.Root>(levelId);

        if (NeedleFxSceneDataInfo.pData == null)
            continue;

	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[0].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[1].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[2].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[3].lightscattering.inScatteringScale, 0.5f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[4].lightscattering.inScatteringScale, 1.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[5].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[6].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[7].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[8].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[9].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[10].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[11].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[12].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[13].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[14].lightscattering.inScatteringScale, 1.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[15].lightscattering.inScatteringScale, 0.25f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[16].lightscattering.inScatteringScale, 0.25f);
    }
}

Code "LightScatEnablew3r01"
//
	#include "Reflection" noemit

	#lib "Reflection"
	#using "NeedleFxSceneData"
	#lib "HMM"
	#lib "INI"

	#import "Services"

	static bool IsConfigInitialised = false;
	static int LightScatEnable = 0;
	static int NightLight = 0;
//
    if (!IsConfigInitialised)
    {
		var mod = HMM.GetModByID("GEAdvanced.mod");

		if (mod == null)
			return;

		string modConfigIniPath = System.IO.Path.Combine(mod.Path, "config.ini");
		var ini = INI.Read(modConfigIniPath);

		LightScatEnable = INI.Parse<int>(ini["LightScatSettings"]["LightScatEnable"], LightScatEnable);
        IsConfigInitialised = true;
    }

if (LightScatEnable == 1)
{
    string[] levelIds = {"w3r01"};

    foreach (string levelId in levelIds) {
        var NeedleFxSceneDataInfo = Reflection.GetDataInfo<NeedleFxSceneData.Root>(levelId);

        if (NeedleFxSceneDataInfo.pData == null)
            continue;

	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[0].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[1].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[2].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[3].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[4].lightscattering.inScatteringScale, 3.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[5].lightscattering.inScatteringScale, 1.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[6].lightscattering.inScatteringScale, 1.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[7].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[8].lightscattering.inScatteringScale, 3.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[9].lightscattering.inScatteringScale, 3.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[10].lightscattering.inScatteringScale, 2.5f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[11].lightscattering.inScatteringScale, 1.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[12].lightscattering.inScatteringScale, 1.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[13].lightscattering.inScatteringScale, 1.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[14].lightscattering.inScatteringScale, 5.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[15].lightscattering.inScatteringScale, 2.0f);
	RFL_SET_PARAM(NeedleFxSceneDataInfo, timeItems[16].lightscattering.inScatteringScale, 2.0f);
    }
}

